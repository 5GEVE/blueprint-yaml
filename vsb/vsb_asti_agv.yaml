# vsb_asti_agv
---
vsBlueprintId: '513e154e-4bee-45f1-9a11-40716dbbb684'
version: '1.0'
name: 'ASTI AGV control and automation'
description: 'Blueprint for AGVs using 5G network for Automation and Control purposes'
imgUrl: ''
parameters:
  - parameterId: 'number_of_AGVs'
    parameterName: 'Number of AGVs'
    parameterType: 'number'
    parameterDescription: 'Number of AGVs (Mandatory)'
    applicabilityField: 'autonomous_vehicle'
  - parameterId: 'location_of_AGVs'
    parameterName: 'Location of the AGVs'
    parameterType: 'geolocation'
    parameterDescription: 'Location of AGVs (Mandatory)'
    applicabilityField: 'autonomous_vehicle'
  - parameterId: 'no_of_ctrl_servers'
    parameterName: 'Number of controller servers'
    parameterType: 'number'
    parameterDescription: 'Number of VNF instances to be used for the Controller'
    applicabilityField: 'autonomous_vehicle'
  - parameterId: 'ctrl_image'
    parameterName: 'PLC virtual image'
    parameterType: 'string'
    parameterDescription: 'Path or URL to the image of PLC software (Mandatory)'
    applicabilityField: 'autonomous_vehicle'
  - parameterId: 'average_data_rate_per_AGV'
    parameterName: 'Average data rate per AGV'
    parameterType: 'number'
    parameterDescription: 'Average data rate per AGV (Optional)'
    applicabilityField: 'autonomous_vehicle'
  - parameterId: 'sap_location'
    parameterName: 'Service Access Point location'
    parameterType: 'geolocation'
    parameterDescription: 'Service Access Point Location (Optional)'
    applicabilityField: 'access_network'
atomicComponents:
  - componentId: 'RAN'
    serversNumber: 1
    componentName: 'Radio Access Network'
    imagesUrls: []
    endPointsIds: ['SapRANVs', 'CpRANEpc']
    lifecycleOperations: {}
    # scalingRules: []
  - componentId: 'Master_PLC'
    componentName: 'Robot Controller Server'
    serversNumber: 1
    imagesUrls: ['master_plc_image']
    endPointsIds: ['CpMPLC']
    lifecycleOperations:
      instantiate: 'scripts/instantiate'
      terminate: 'scripts/terminate'
      update: 'scripts/update'
      heal: 'scripts/heal'
    # scaling_rules: ['scale out if load > 60% for 2 mins']
  - componentId: 'vEPC'
    # component_name: 'Virtualized EPC'
    serversNumber: 1
    imagesUrls: []
    endPointsIds: ['cpEPCRan', 'SapCoreExt']
    lifecycleOperations: null
    # scaling_rules: []
  - componentId: 'Mgmt'
    # component_name: 'Robot Management Server'
    serversNumber: 1
    imagesUrls: ['mgmt_image']
    endPointsIds: ['SapMgmt', 'SapAdmin']
    lifecycleOperations:
      instantiate: 'scripts/instantiate'
      terminate: 'scripts/terminate'
      update: 'scripts/update'
      heal: 'scripts/heal'
    # scaling_rules: ['scale up if load > 90% for 2 mins']
endPoints:
  - endPointId: 'SapRANVs'
    external: true
    management: false
    ranConnection: true
  - endPointId: 'CpRANEpc'
    external: false
    management: false
    ranConnection: false
  - endPointId: 'CpMPLC'
    external: false
    management: false
    ranConnection: false
  - endPointId: 'CpEPCRan'
    external: false
    management: false
    ranConnection: false
  - endPointId: 'SapCoreExt'
    external: true
    management: false
    ranConnection: false
  - endPointId: 'SapMgmt'
    external: true
    management: false
    ranConnection: false
  - endPointId: 'SapAdmin'
    external: true
    management: false
    ranConnection: false
connectivityServices:
  - endPointIds: ['CpRanEpc', 'CpMPLC', 'CpEpcRan']
    external: false
  - endPointIds: ['SapCoreExt', 'SapMgmt']
    external: false
serviceSequence:
  # sensor data flow
  - vsComponentId: 'RAN'
    endPointId: 'SapRANVs'
  - vsComponentId: 'RAN'
    endPointId: 'CpRANEpc'
  - vsComponentId: 'Ctrl'
    endPointId: 'CpMPLC'
translationRules:
  - input:
      - parameterId: 'number_of_AGVs'
        minValue: 0
        maxValue: 3
      - parameterId: 'no_of_ctrl_servers'
        minValue: 1
        maxValue: 3
    nsdId: 'nsd_asti_small'
    nsdVersion: '1.0'
    nsFlavourId: 'fl_asti_small'
    nsInstantiationLevelId: 'il_asti_small'
  - input:
      - parameterId: 'number_of_AGVs'
        minValue: 4
        maxValue: 10
      - parameterId: 'no_of_ctrl_servers'
        minValue: 3
        maxValue: 5
    nsdId: 'nsd_asti_medium_id'
    nsdVersion: '1.0'
    nsFlavourId: 'fl_asti_medium'
    nsInstantiationLevelId: 'il_asti_medium'
contexts: ['ctx_id_1', 'ctx_id_2']
applicationMetrics:
  - metricId: 'navigation_level'
    name: 'Measurement of the quality of the AGV navigation.'
    type: 'GAUGE'
    unit: ''
    interval: '1s'
    topic: '/app/navigation_level'
  - metricId: 'power_consumption'
    name: 'Measurement of the power consumption from the AGV.'
    type: 'GAUGE'
    unit: 'watt'
    interval: '1s'
    topic: '/app/power_consumption'
  - metricId: 'guide_ok'
    name: 'Measurement of the guide status of the AGV.'
    type: 'DELTA'
    unit: ''
    interval: '10ms'
    topic: '/app/guide_ok'
  - metricId: 'connected_robots'
    name: 'Number of currently connected robots'
    type: 'GAUGE'
    unit: ''
    interval: '5s'
    topic: '/app/asti/connected-robots'

